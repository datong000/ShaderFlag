var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameUI":4}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = false;
        Laya.Shader3D.debugMode = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.URL.basePath = "https://cdn.zzzgames.cn/flag/";
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CtmMat_Flag = /** @class */ (function (_super) {
    __extends(CtmMat_Flag, _super);
    function CtmMat_Flag() {
        var _this = _super.call(this) || this;
        _this.setShaderName("CtmMat_Flag");
        _this.renderMode = Laya.BlinnPhongMaterial.RENDERMODE_OPAQUE;
        return _this;
    }
    Object.defineProperty(CtmMat_Flag.prototype, "MainTex", {
        set: function (value) {
            this._shaderValues.setTexture(CtmMat_Flag.MainTex, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CtmMat_Flag.prototype, "Speed", {
        set: function (value) {
            this._shaderValues.setNumber(CtmMat_Flag.Speed, value);
        },
        enumerable: true,
        configurable: true
    });
    CtmMat_Flag.MainTex = Laya.Shader3D.propertyNameToID("u_MainTex");
    CtmMat_Flag.Speed = Laya.Shader3D.propertyNameToID("u_Speed");
    return CtmMat_Flag;
}(Laya.BlinnPhongMaterial));
exports.CtmMat_Flag = CtmMat_Flag;
var CtmSha_Flag = /** @class */ (function () {
    function CtmSha_Flag() {
    }
    CtmSha_Flag.prototype.init = function () {
        var attributeMap = {
            "a_Position": Laya.VertexMesh.MESH_POSITION0,
            "a_Normal": Laya.VertexMesh.MESH_NORMAL0,
            'a_Texcoord0': Laya.VertexMesh.MESH_TEXTURECOORDINATE0,
            'a_BoneWeights': Laya.VertexMesh.MESH_BLENDWEIGHT0,
            'a_BoneIndices': Laya.VertexMesh.MESH_BLENDINDICES0
        };
        var uniformMap = {
            'u_Bones': Laya.Shader3D.PERIOD_CUSTOM,
            'u_MvpMatrix': Laya.Shader3D.PERIOD_SPRITE,
            'u_WorldMat': Laya.Shader3D.PERIOD_SPRITE,
            'u_Color': Laya.Shader3D.PERIOD_MATERIAL,
            'u_LineWidth': Laya.Shader3D.PERIOD_MATERIAL,
            'u_Time': Laya.Shader3D.PERIOD_SCENE,
            'u_Speed': Laya.Shader3D.PERIOD_MATERIAL,
            'u_MainTex': Laya.Shader3D.PERIOD_MATERIAL,
        };
        var stateMap = {
            's_Cull': Laya.Shader3D.RENDER_STATE_CULL,
            's_Blend': Laya.Shader3D.RENDER_STATE_BLEND,
            's_BlendSrc': Laya.Shader3D.RENDER_STATE_BLEND_SRC,
            's_BlendDst': Laya.Shader3D.RENDER_STATE_BLEND_DST,
            's_DepthTest': Laya.Shader3D.RENDER_STATE_DEPTH_TEST,
            's_DepthWrite': Laya.Shader3D.RENDER_STATE_DEPTH_WRITE
        };
        var vs = "\n        #include \"Lighting.glsl\";\n        attribute vec4 a_Position;\n        attribute vec2 a_Texcoord0;\n        attribute vec3 a_Normal;\n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_WorldMat;\n        varying vec2 v_Texcoord0;\n        varying vec3 v_Normal;\n        uniform float u_Time;\n        uniform float u_Speed;\n\n        #ifdef BONE\n        attribute vec4 a_BoneIndices;\n        attribute vec4 a_BoneWeights;\n        const int c_MaxBoneCount = 24;\n        uniform mat4 u_Bones[c_MaxBoneCount];\n        #endif\n\n        void main()\n        {\n            v_Texcoord0 = a_Texcoord0;\n            vec4 pos = a_Position;\n            float x = (a_Position.x + 5.0)/10.0;\n            pos.y += x * sin(pos.x + u_Time * u_Speed);\n            pos.y += x * sin(pos.z + u_Time * u_Speed);\n            gl_Position=u_MvpMatrix * pos;\n        }\n        ";
        var ps = "\n        #ifdef FSHIGHPRECISION\n        precision highp float;\n        #else\n        precision mediump float;\n        #endif\n        uniform vec4 u_Color;\n        uniform sampler2D u_MainTex;\n        varying vec2 v_Texcoord0;\n\n        void main()\n        {\n            gl_FragColor = texture2D(u_MainTex,vec2(v_Texcoord0.x,1.0-v_Texcoord0.y));\n        }\n        ";
        var customShader = Laya.Shader3D.add("CtmMat_Flag");
        var subShader = new Laya.SubShader(attributeMap, uniformMap, Laya.SkinnedMeshSprite3D.shaderDefines, Laya.BlinnPhongMaterial.shaderDefines);
        customShader.addSubShader(subShader);
        subShader.addShaderPass(vs, ps, stateMap);
    };
    return CtmSha_Flag;
}());
exports.CtmSha_Flag = CtmSha_Flag;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var CtmMat_Flag_1 = require("./CtmMat_Flag");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        new CtmMat_Flag_1.CtmSha_Flag().init();
        var cus;
        Laya.Scene3D.load("res/LayaScene_Car_Tocus/Conventional/Car_Tocus.ls", Laya.Handler.create(_this, function (res) {
            Laya.stage.addChildAt(res, 0);
            cus = new CtmMat_Flag_1.CtmMat_Flag();
            Laya.Texture2D.load("res/LayaScene_Car_Tocus/Conventional/Assets/Textures/nationalFlag.jpg", Laya.Handler.create(_this, function (tex) {
                cus.MainTex = tex;
            }));
            cus.Speed = _this.slider.value;
            var model = res.getChildByName("GameObject").getChildByName("Plane");
            model.meshRenderer.material = cus;
        }));
        _this.slider.changeHandler = Laya.Handler.create(_this, function () {
            cus.Speed = _this.slider.value;
            console.log(_this.slider.value);
        }, null, false);
        return _this;
    }
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"./../ui/layaMaxUI":5,"./CtmMat_Flag":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Scene));
        test.TestSceneUI = TestSceneUI;
        REG("ui.test.TestSceneUI", TestSceneUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
